import os
import logging
import sys
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO,
    stream=sys.stdout
)

print("=== üöÄ –ù–ê–ß–ò–ù–ê–ï–ú –ó–ê–ü–£–°–ö –ë–û–¢–ê ===")

# –¢–æ–∫–µ–Ω (–ø–æ–∫–∞ –ø—Ä—è–º–æ –≤ –∫–æ–¥–µ –¥–ª—è —Ç–µ—Å—Ç–∞)
BOT_TOKEN = "8072280922:AAHGvdyamtcDGYjQlGZ8_TLIW-dK-GpN9Bc"  # –ù–ï –ó–ê–ë–£–î–¨–¢–ï –ó–ê–ú–ï–ù–ò–¢–¨ –ù–ê –í–ê–® –¢–û–ö–ï–ù!
print(f"üîë –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {'–î–ê' if BOT_TOKEN else '–ù–ï–¢'}")

if not BOT_TOKEN or BOT_TOKEN == "–í–ê–®_–¢–û–ö–ï–ù_–ó–î–ï–°–¨":
    print("‚ùå –û–®–ò–ë–ö–ê: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    sys.exit(1)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print(f"üëã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.message.from_user.first_name} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    await update.message.reply_text(
        f'üëã –ü—Ä–∏–≤–µ—Ç, {update.message.from_user.first_name}!\n'
        '‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –Ω–∞ Render! üöÄ\n'
        '–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!'
    )

async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {update.message.text}")
    await update.message.reply_text(f'‚úÖ –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: {update.message.text}')

def main():
    try:
        print("1. üöÄ –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞...")
        application = Application.builder().token(BOT_TOKEN).build()
        
        print("2. üìù –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏...")
        application.add_handler(CommandHandler("start", start))
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))
        
        print("3. ‚úÖ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç polling...")
        print("=== üåü –ë–û–¢ –£–°–ü–ï–®–ù–û –ó–ê–ü–£–©–ï–ù ===")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        application.run_polling()
        
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)

if __name__ == '__main__':
    main()
